name: Build, Push, and Deploy (Docker Compose on Azure VM)

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.sha.outputs.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get SHA
        id: sha
        run: echo "sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build & Push Backend (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ./books-backend
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/books-backend:latest
            ${{ secrets.DOCKER_USERNAME }}/books-backend:${{ github.sha }}

      - name: Build & Push Frontend (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ./books-frontend
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            VITE_API_BASE=/api
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/books-frontend:latest
            ${{ secrets.DOCKER_USERNAME }}/books-frontend:${{ github.sha }}

      - name: Build & Push Frontend for K8s (multi-arch, empty base)
        uses: docker/build-push-action@v6
        with:
          context: ./books-frontend
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            VITE_API_BASE=
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/books-frontend-k8s:latest
            ${{ secrets.DOCKER_USERNAME }}/books-frontend-k8s:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
      IMAGE_TAG: ${{ needs.build-and-push.outputs.sha }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    steps:
      - name: Checkout (for possible future file upload)
        uses: actions/checkout@v4

      - name: Deploy via SSH to Azure VM
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            set -e
            cd /opt/books-app

            if [ ! -f docker-compose.yml ]; then
              echo "docker-compose.yml not found in /opt/books-app"
              exit 1
            fi

            # Prepare env for tag and username; you can also maintain a .env on the VM
            echo "IMAGE_TAG=${IMAGE_TAG}" > .deploy.env
            echo "DOCKER_USERNAME=${DOCKER_USERNAME}" >> .deploy.env

            # Pull and restart with new images
            set -a
            . .deploy.env
            set +a

            docker compose pull
            docker compose up -d --remove-orphans

            # Optional: prune old images to free space
            docker image prune -f