name: CI

on:
  push:
    branches: ["**"]
    paths:
      - "books-backend/**"
      - "books-frontend/**"
      - "docker-compose.yml"     # kept in triggers in case it changes local dev; CI uses services
      - ".github/workflows/ci.yml"
  pull_request:
    paths:
      - "books-backend/**"
      - "books-frontend/**"
      - "docker-compose.yml"
      - ".github/workflows/ci.yml"

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  JAVA_VERSION: "21"
  NODE_VERSION: "20"
  MONGODB_URI: "mongodb://localhost:27017/booksdb"

jobs:
  backend:
    name: Backend (Spring Boot + Maven)
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })' || exit 1"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=12

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven

      - name: Make Maven wrapper executable (if present)
        working-directory: books-backend
        run: |
          if [ -f mvnw ]; then chmod +x mvnw; fi

      - name: Test (Maven)
        working-directory: books-backend
        env:
          SPRING_DATA_MONGODB_URI: ${{ env.MONGODB_URI }}
        run: |
          MVN="./mvnw"
          [ -f "./mvnw" ] || MVN="mvn"
          $MVN -B -ntp clean verify -Dspring.data.mongodb.uri="${{ env.MONGODB_URI }}"

      - name: Upload backend test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-reports
          path: |
            books-backend/**/target/surefire-reports/**
            books-backend/**/target/failsafe-reports/**
          if-no-files-found: ignore

  frontend:
    name: Frontend (React)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: books-frontend/package-lock.json

      - name: Show Node & npm versions
        run: |
          echo "Node: $(node -v)"
          echo "npm:  $(npm -v)"

      - name: Install dependencies
        working-directory: books-frontend
        run: npm ci

      - name: Lint (if present)
        working-directory: books-frontend
        run: npm run lint --if-present

      - name: Test (if present)
        working-directory: books-frontend
        run: npm run test --if-present -- --ci --watchAll=false

      - name: Build (if present)
        working-directory: books-frontend
        run: npm run build --if-present

      - name: Upload frontend build (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: books-frontend/build
          if-no-files-found: ignore